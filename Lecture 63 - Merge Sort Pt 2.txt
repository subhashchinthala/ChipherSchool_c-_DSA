// Lecture 63 - Merge Sort Pt 2

#include<iostream>
using namespace std;

void merge(int * arr, int start, int end)
{
   // We need to actually merge the 2 sorted arrays which we have received
   // The arr actually has been sorted till start to mid and also from mid to end but, now we need to merge (combine this to )
}

void mergeSort(int *arr, int start, int end)
{

  // This recresion needds to have a bse case :

  // What is the base case : the base case is when there is only 1 elements :

  if (start>=end)  // This implies there is only 1 elements and now we cannot split it further 
  {
    return; 
  }

  int mid;

  mid = (start+end)/2;

  // We are also using the same code to sort the smaller arrays

  mergeSort(arr,start,mid);
  mergeSort(arr,mid+1,end);

  // But after we have sorted the smaller arrays, we need to merge them to get the bigger arrays 

  merge(arr,start,end);

}

int main()
{
  int size_arr;

  int arr[5] = {1,5,3,10,4};
  size_arr = 5;

  mergeSort(arr,0,size_arr-1);

}
